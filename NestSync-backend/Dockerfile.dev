# NestSync FastAPI Backend Development Dockerfile
# Optimized for development with hot reload and debugging

FROM python:3.11-slim as development

# Set development environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    # Development specific
    ENVIRONMENT=development \
    DEBUG=true \
    LOG_LEVEL=debug \
    TZ=America/Toronto

# Install system development dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Build essentials for development
    build-essential \
    gcc \
    g++ \
    # Database clients
    libpq-dev \
    postgresql-client \
    # Image processing libraries for development
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libfreetype6-dev \
    # OCR development libraries
    tesseract-ocr \
    tesseract-ocr-eng \
    tesseract-ocr-fra \
    poppler-utils \
    # ML/AI development libraries
    libblas-dev \
    liblapack-dev \
    libopenblas-dev \
    gfortran \
    # Security libraries
    libssl-dev \
    libffi-dev \
    # Development utilities
    curl \
    wget \
    vim \
    git \
    htop \
    # Debugging tools
    gdb \
    valgrind \
    && rm -rf /var/lib/apt/lists/*

# Set timezone
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Create virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Upgrade pip and install wheel for faster builds
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Set working directory
WORKDIR /app

# Copy requirements for development
COPY requirements*.txt ./

# Install Python dependencies with development tools
RUN pip install --no-cache-dir -r requirements-minimal-dev.txt

# Install additional development dependencies
RUN pip install --no-cache-dir \
    pytest \
    pytest-asyncio \
    pytest-cov \
    httpx-ws \
    factory-boy \
    black \
    flake8 \
    mypy \
    ipython \
    debugpy \
    pre-commit \
    bandit \
    safety

# Create non-root user for security
RUN groupadd --gid 1001 nestsync && \
    useradd --uid 1001 --gid nestsync --shell /bin/bash --create-home nestsync

# Create directories for development with proper permissions
RUN mkdir -p /app/logs /app/temp /app/uploads /app/.pytest_cache && \
    chown -R nestsync:nestsync /app && \
    chmod -R 755 /app

# Switch to non-root user
USER nestsync

# Expose development port
EXPOSE 8001

# Health check for development server
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Development command with hot reload and debugging
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001", "--reload", "--log-level", "debug"]